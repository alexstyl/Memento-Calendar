buildscript {
    dependencies {
        classpath 'com.novoda:build-properties-plugin:1.2.1'
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.M13.2"
}

apply from: '../versions.gradle'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.novoda.build-properties'

detekt {
    version = "1.0.0.M13.2"

    profile("main") {
        input = "$projectDir/src/main/java"
        config = "$rootDir/team-props/static-analysis/detekt-config.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
        output = "$projectDir/build/reports/detekt.xml"
    }
}

project.afterEvaluate {
    check.dependsOn tasks['detektCheck']
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(".apk", "-${variant.versionName}.apk"))
        }
    }


    defaultConfig {
        applicationId 'com.alexstyl.specialdates'
        minSdkVersion 16
        targetSdkVersion 25
        versionCode androidVersionCode
        versionName androidVersionName
        manifestPlaceholders = [crashlyticsApiKey: crashlyticsKey]
        resValue "string", "admob_unit_id", "\"$adMobUnitId\""

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }


    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        test {
            resources.srcDirs = ['src/main/res/raw']
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'http://dl.bintray.com/novoda/maven'
    }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(dir: 'libs', exclude: 'android-support-v4.jar', include: ['*.jar'])
    compile project(':android_common')

    compile "com.android.support:design:$android_support_version"
    compile "com.android.support:cardview-v7:$android_support_version"
    compile "com.android.support:appcompat-v7:$android_support_version"
    compile "com.android.support:recyclerview-v7:$android_support_version"
    compile "com.android.support:transition:$android_support_version"

    compile 'com.google.dagger:dagger:2.9'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    provided 'javax.annotation:jsr250-api:1.0'

    compile 'com.novoda:notils:2.2.15'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.novoda:simple-chrome-custom-tabs:0.1.4'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }
    compile "com.google.android.gms:play-services-wearable:$play_services_version"
    compile 'com.theartofdev.edmodo:android-image-cropper:2.3.1'
    compile "com.google.firebase:firebase-core:$play_services_version"
    compile "com.google.firebase:firebase-ads:$play_services_version"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    debugCompile 'com.facebook.stetho:stetho:1.3.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'joda-time:joda-time:2.9.4'
    testCompile 'org.json:json:20140107'
    androidTestCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'
kotlin {
    experimental {
        coroutines "enable"
    }
}
